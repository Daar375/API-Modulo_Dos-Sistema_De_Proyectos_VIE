//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VIEDataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class VIEEntities : DbContext
    {
        public VIEEntities()
            : base("name=VIEEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Frascati> Frascati { get; set; }
        public DbSet<Objetivo> Objetivo { get; set; }
        public DbSet<ODS> ODS { get; set; }
        public DbSet<Poblacion_Beneficiaria> Poblacion_Beneficiaria { get; set; }
        public DbSet<Proyecto> Proyecto { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual int agregarFrascati(string codigoProyecto, string area, string subArea)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("codigoProyecto", codigoProyecto) :
                new ObjectParameter("codigoProyecto", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var subAreaParameter = subArea != null ?
                new ObjectParameter("subArea", subArea) :
                new ObjectParameter("subArea", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agregarFrascati", codigoProyectoParameter, areaParameter, subAreaParameter);
        }
    
        public virtual int agregarODS(string codigoProyecto, string area, string subArea)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("codigoProyecto", codigoProyecto) :
                new ObjectParameter("codigoProyecto", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var subAreaParameter = subArea != null ?
                new ObjectParameter("subArea", subArea) :
                new ObjectParameter("subArea", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agregarODS", codigoProyectoParameter, areaParameter, subAreaParameter);
        }
    
        public virtual int agregarPoblación(string codigoProyecto, string poblacion)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("codigoProyecto", codigoProyecto) :
                new ObjectParameter("codigoProyecto", typeof(string));
    
            var poblacionParameter = poblacion != null ?
                new ObjectParameter("poblacion", poblacion) :
                new ObjectParameter("poblacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agregarPoblación", codigoProyectoParameter, poblacionParameter);
        }
    
        public virtual int eliminarFrascati(Nullable<int> idArea)
        {
            var idAreaParameter = idArea.HasValue ?
                new ObjectParameter("idArea", idArea) :
                new ObjectParameter("idArea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarFrascati", idAreaParameter);
        }
    
        public virtual int eliminarODS(Nullable<int> idArea)
        {
            var idAreaParameter = idArea.HasValue ?
                new ObjectParameter("idArea", idArea) :
                new ObjectParameter("idArea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarODS", idAreaParameter);
        }
    
        public virtual int eliminarPoblación(Nullable<int> codigoPoblacion)
        {
            var codigoPoblacionParameter = codigoPoblacion.HasValue ?
                new ObjectParameter("codigoPoblacion", codigoPoblacion) :
                new ObjectParameter("codigoPoblacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarPoblación", codigoPoblacionParameter);
        }
    
        public virtual ObjectResult<getFrascati_Result> getFrascati(string codigoProyecto)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("codigoProyecto", codigoProyecto) :
                new ObjectParameter("codigoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getFrascati_Result>("getFrascati", codigoProyectoParameter);
        }
    
        public virtual ObjectResult<getObjetivos_Result> getObjetivos(string codigoProyecto)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("codigoProyecto", codigoProyecto) :
                new ObjectParameter("codigoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getObjetivos_Result>("getObjetivos", codigoProyectoParameter);
        }
    
        public virtual ObjectResult<getODS_Result> getODS(string codigoProyecto)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("codigoProyecto", codigoProyecto) :
                new ObjectParameter("codigoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getODS_Result>("getODS", codigoProyectoParameter);
        }
    
        public virtual ObjectResult<getPoblaciones_Result> getPoblaciones(string codigoProyecto)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("codigoProyecto", codigoProyecto) :
                new ObjectParameter("codigoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPoblaciones_Result>("getPoblaciones", codigoProyectoParameter);
        }
    
        public virtual ObjectResult<getProyecto_Result> getProyecto(string codigoEspecifico)
        {
            var codigoEspecificoParameter = codigoEspecifico != null ?
                new ObjectParameter("codigoEspecifico", codigoEspecifico) :
                new ObjectParameter("codigoEspecifico", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getProyecto_Result>("getProyecto", codigoEspecificoParameter);
        }
    
        public virtual ObjectResult<getProyectos_Result> getProyectos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getProyectos_Result>("getProyectos");
        }
    
        public virtual ObjectResult<getProyectosPorBusqueda_Result> getProyectosPorBusqueda(string criterioBusqueda, string parametro)
        {
            var criterioBusquedaParameter = criterioBusqueda != null ?
                new ObjectParameter("criterioBusqueda", criterioBusqueda) :
                new ObjectParameter("criterioBusqueda", typeof(string));
    
            var parametroParameter = parametro != null ?
                new ObjectParameter("parametro", parametro) :
                new ObjectParameter("parametro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getProyectosPorBusqueda_Result>("getProyectosPorBusqueda", criterioBusquedaParameter, parametroParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
