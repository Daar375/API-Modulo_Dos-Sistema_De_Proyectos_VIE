//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccesoDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class VieEntidades : DbContext
    {
        public VieEntidades()
            : base("name=VieEntidades")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AreaFrascati> AreaFrascati { get; set; }
        public DbSet<Compra> Compra { get; set; }
        public DbSet<Departamento> Departamento { get; set; }
        public DbSet<EstadoDeProyecto> EstadoDeProyecto { get; set; }
        public DbSet<Informe> Informe { get; set; }
        public DbSet<Investigador> Investigador { get; set; }
        public DbSet<ModalidadProyecto> ModalidadProyecto { get; set; }
        public DbSet<ObjetivoEspecifico> ObjetivoEspecifico { get; set; }
        public DbSet<ODS> ODS { get; set; }
        public DbSet<PalabraClave> PalabraClave { get; set; }
        public DbSet<PlanDeAccion> PlanDeAccion { get; set; }
        public DbSet<PlanteamientoProyecto> PlanteamientoProyecto { get; set; }
        public DbSet<PoblacionBeneficiaria> PoblacionBeneficiaria { get; set; }
        public DbSet<Proyecto> Proyecto { get; set; }
        public DbSet<ProyectoXBeneficiaria> ProyectoXBeneficiaria { get; set; }
        public DbSet<ProyectoXDepartamento> ProyectoXDepartamento { get; set; }
        public DbSet<ProyectoXFrascati> ProyectoXFrascati { get; set; }
        public DbSet<ProyectoXODS> ProyectoXODS { get; set; }
        public DbSet<RubroPresupuesto> RubroPresupuesto { get; set; }
        public DbSet<SetDatosGenerales> SetDatosGenerales { get; set; }
        public DbSet<SubAreaFrascati> SubAreaFrascati { get; set; }
        public DbSet<SubODS> SubODS { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<TipoDepartamento> TipoDepartamento { get; set; }
        public DbSet<TipoDeProceso> TipoDeProceso { get; set; }
        public DbSet<TipoInforme> TipoInforme { get; set; }
        public DbSet<TipoProyecto> TipoProyecto { get; set; }
    
        public virtual ObjectResult<Nullable<int>> Pr_Compra_Eliminar(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Pr_Compra_Eliminar", idParameter);
        }
    
        public virtual ObjectResult<Pr_Compra_Insertar_Result> Pr_Compra_Insertar(string nombreProducto, Nullable<int> cantidad, Nullable<int> precioTotal, string codigoProyecto)
        {
            var nombreProductoParameter = nombreProducto != null ?
                new ObjectParameter("NombreProducto", nombreProducto) :
                new ObjectParameter("NombreProducto", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var precioTotalParameter = precioTotal.HasValue ?
                new ObjectParameter("PrecioTotal", precioTotal) :
                new ObjectParameter("PrecioTotal", typeof(int));
    
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Compra_Insertar_Result>("Pr_Compra_Insertar", nombreProductoParameter, cantidadParameter, precioTotalParameter, codigoProyectoParameter);
        }
    
        public virtual ObjectResult<Pr_Compra_SeleccionarXProyecto_Result> Pr_Compra_SeleccionarXProyecto(string codigoProyecto)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Compra_SeleccionarXProyecto_Result>("Pr_Compra_SeleccionarXProyecto", codigoProyectoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Pr_Informe_Eliminar(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Pr_Informe_Eliminar", idParameter);
        }
    
        public virtual ObjectResult<Pr_Informe_Insertar_Result> Pr_Informe_Insertar(string tituloInforme, Nullable<int> idTipoInforme, Nullable<System.DateTime> fechaProgramada, string estado, string memorandoDIP, string observaciones, string codigoProyecto)
        {
            var tituloInformeParameter = tituloInforme != null ?
                new ObjectParameter("TituloInforme", tituloInforme) :
                new ObjectParameter("TituloInforme", typeof(string));
    
            var idTipoInformeParameter = idTipoInforme.HasValue ?
                new ObjectParameter("IdTipoInforme", idTipoInforme) :
                new ObjectParameter("IdTipoInforme", typeof(int));
    
            var fechaProgramadaParameter = fechaProgramada.HasValue ?
                new ObjectParameter("FechaProgramada", fechaProgramada) :
                new ObjectParameter("FechaProgramada", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var memorandoDIPParameter = memorandoDIP != null ?
                new ObjectParameter("MemorandoDIP", memorandoDIP) :
                new ObjectParameter("MemorandoDIP", typeof(string));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Informe_Insertar_Result>("Pr_Informe_Insertar", tituloInformeParameter, idTipoInformeParameter, fechaProgramadaParameter, estadoParameter, memorandoDIPParameter, observacionesParameter, codigoProyectoParameter);
        }
    
        public virtual ObjectResult<Pr_Informe_SeleccionarXProyecto_Result> Pr_Informe_SeleccionarXProyecto(string codigoProyecto)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Informe_SeleccionarXProyecto_Result>("Pr_Informe_SeleccionarXProyecto", codigoProyectoParameter);
        }
    
        public virtual ObjectResult<string> Pr_ObjetivoEspecifico_Seleccionar(string codigo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Pr_ObjetivoEspecifico_Seleccionar", codigoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Pr_PalabraClave_Eliminar(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Pr_PalabraClave_Eliminar", idParameter);
        }
    
        public virtual ObjectResult<Pr_PalabraClave_Insertar_Result> Pr_PalabraClave_Insertar(string palabraClave, string codigoProyecto)
        {
            var palabraClaveParameter = palabraClave != null ?
                new ObjectParameter("PalabraClave", palabraClave) :
                new ObjectParameter("PalabraClave", typeof(string));
    
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_PalabraClave_Insertar_Result>("Pr_PalabraClave_Insertar", palabraClaveParameter, codigoProyectoParameter);
        }
    
        public virtual ObjectResult<Pr_PalabrasClave_SeleccionarXProyecto_Result> Pr_PalabrasClave_SeleccionarXProyecto(string codigoProyecto)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_PalabrasClave_SeleccionarXProyecto_Result>("Pr_PalabrasClave_SeleccionarXProyecto", codigoProyectoParameter);
        }
    
        public virtual ObjectResult<Pr_Proyecto_Buscar_Result> Pr_Proyecto_Buscar(string criterioBusqueda, string parametro)
        {
            var criterioBusquedaParameter = criterioBusqueda != null ?
                new ObjectParameter("CriterioBusqueda", criterioBusqueda) :
                new ObjectParameter("CriterioBusqueda", typeof(string));
    
            var parametroParameter = parametro != null ?
                new ObjectParameter("Parametro", parametro) :
                new ObjectParameter("Parametro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Proyecto_Buscar_Result>("Pr_Proyecto_Buscar", criterioBusquedaParameter, parametroParameter);
        }
    
        public virtual ObjectResult<Pr_Proyecto_Consultar_Result> Pr_Proyecto_Consultar(string codigo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Proyecto_Consultar_Result>("Pr_Proyecto_Consultar", codigoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Pr_Proyecto_Modificar(string codigo, string nuevoNombre, string nuevoObjetivoGeneral, string nuevaActaVIE, string nuevaActaEscuela)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nuevoNombreParameter = nuevoNombre != null ?
                new ObjectParameter("NuevoNombre", nuevoNombre) :
                new ObjectParameter("NuevoNombre", typeof(string));
    
            var nuevoObjetivoGeneralParameter = nuevoObjetivoGeneral != null ?
                new ObjectParameter("NuevoObjetivoGeneral", nuevoObjetivoGeneral) :
                new ObjectParameter("NuevoObjetivoGeneral", typeof(string));
    
            var nuevaActaVIEParameter = nuevaActaVIE != null ?
                new ObjectParameter("NuevaActaVIE", nuevaActaVIE) :
                new ObjectParameter("NuevaActaVIE", typeof(string));
    
            var nuevaActaEscuelaParameter = nuevaActaEscuela != null ?
                new ObjectParameter("NuevaActaEscuela", nuevaActaEscuela) :
                new ObjectParameter("NuevaActaEscuela", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Pr_Proyecto_Modificar", codigoParameter, nuevoNombreParameter, nuevoObjetivoGeneralParameter, nuevaActaVIEParameter, nuevaActaEscuelaParameter);
        }
    
        public virtual ObjectResult<Pr_Proyecto_Seleccionar_Result> Pr_Proyecto_Seleccionar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Proyecto_Seleccionar_Result>("Pr_Proyecto_Seleccionar");
        }
    
        public virtual ObjectResult<Nullable<int>> Pr_ProyectoXBeneficiaria_Eliminar(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Pr_ProyectoXBeneficiaria_Eliminar", idParameter);
        }
    
        public virtual ObjectResult<Pr_ProyectoXBeneficiaria_Insertar_Result> Pr_ProyectoXBeneficiaria_Insertar(string codigoProyecto, Nullable<int> idPoblacionBeneficiaria)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            var idPoblacionBeneficiariaParameter = idPoblacionBeneficiaria.HasValue ?
                new ObjectParameter("IdPoblacionBeneficiaria", idPoblacionBeneficiaria) :
                new ObjectParameter("IdPoblacionBeneficiaria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_ProyectoXBeneficiaria_Insertar_Result>("Pr_ProyectoXBeneficiaria_Insertar", codigoProyectoParameter, idPoblacionBeneficiariaParameter);
        }
    
        public virtual ObjectResult<Pr_ProyectoXBeneficiaria_Seleccionar_Result> Pr_ProyectoXBeneficiaria_Seleccionar(string codigoProyecto)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_ProyectoXBeneficiaria_Seleccionar_Result>("Pr_ProyectoXBeneficiaria_Seleccionar", codigoProyectoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Pr_ProyectoXDepartamento_Eliminar(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Pr_ProyectoXDepartamento_Eliminar", idParameter);
        }
    
        public virtual ObjectResult<Pr_ProyectoXDepartamento_Insertar_Result> Pr_ProyectoXDepartamento_Insertar(string codigoProyecto, Nullable<int> idDepartamento, Nullable<int> idTipoDepartamento)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            var idDepartamentoParameter = idDepartamento.HasValue ?
                new ObjectParameter("IdDepartamento", idDepartamento) :
                new ObjectParameter("IdDepartamento", typeof(int));
    
            var idTipoDepartamentoParameter = idTipoDepartamento.HasValue ?
                new ObjectParameter("IdTipoDepartamento", idTipoDepartamento) :
                new ObjectParameter("IdTipoDepartamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_ProyectoXDepartamento_Insertar_Result>("Pr_ProyectoXDepartamento_Insertar", codigoProyectoParameter, idDepartamentoParameter, idTipoDepartamentoParameter);
        }
    
        public virtual ObjectResult<Pr_ProyectoXDepartamentos_Seleccionar_Result> Pr_ProyectoXDepartamentos_Seleccionar(string codigoProyecto)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_ProyectoXDepartamentos_Seleccionar_Result>("Pr_ProyectoXDepartamentos_Seleccionar", codigoProyectoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Pr_ProyectoXFrascati_Eliminar(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Pr_ProyectoXFrascati_Eliminar", idParameter);
        }
    
        public virtual ObjectResult<Pr_ProyectoXFrascati_Insertar_Result> Pr_ProyectoXFrascati_Insertar(string codigoProyecto, Nullable<int> idSubArea, Nullable<int> idArea)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            var idSubAreaParameter = idSubArea.HasValue ?
                new ObjectParameter("IdSubArea", idSubArea) :
                new ObjectParameter("IdSubArea", typeof(int));
    
            var idAreaParameter = idArea.HasValue ?
                new ObjectParameter("IdArea", idArea) :
                new ObjectParameter("IdArea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_ProyectoXFrascati_Insertar_Result>("Pr_ProyectoXFrascati_Insertar", codigoProyectoParameter, idSubAreaParameter, idAreaParameter);
        }
    
        public virtual ObjectResult<Pr_ProyectoXFrascati_Seleccionar_Result> Pr_ProyectoXFrascati_Seleccionar(string codigoProyecto)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_ProyectoXFrascati_Seleccionar_Result>("Pr_ProyectoXFrascati_Seleccionar", codigoProyectoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Pr_ProyectoXODS_Eliminar(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Pr_ProyectoXODS_Eliminar", idParameter);
        }
    
        public virtual ObjectResult<Pr_ProyectoXODS_Insertar_Result> Pr_ProyectoXODS_Insertar(string codigoProyecto, Nullable<int> idSubODS, Nullable<int> idODS)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            var idSubODSParameter = idSubODS.HasValue ?
                new ObjectParameter("IdSubODS", idSubODS) :
                new ObjectParameter("IdSubODS", typeof(int));
    
            var idODSParameter = idODS.HasValue ?
                new ObjectParameter("IdODS", idODS) :
                new ObjectParameter("IdODS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_ProyectoXODS_Insertar_Result>("Pr_ProyectoXODS_Insertar", codigoProyectoParameter, idSubODSParameter, idODSParameter);
        }
    
        public virtual ObjectResult<Pr_ProyectoXODS_Seleccionar_Result> Pr_ProyectoXODS_Seleccionar(string codigoProyecto)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_ProyectoXODS_Seleccionar_Result>("Pr_ProyectoXODS_Seleccionar", codigoProyectoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Pr_RubroPresupuesto_Eliminar(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Pr_RubroPresupuesto_Eliminar", idParameter);
        }
    
        public virtual ObjectResult<Pr_RubroPresupuesto_Insertar_Result> Pr_RubroPresupuesto_Insertar(string nombre, Nullable<int> ano, Nullable<int> monto, string codigoProyecto, string justificacion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var anoParameter = ano.HasValue ?
                new ObjectParameter("Ano", ano) :
                new ObjectParameter("Ano", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(int));
    
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            var justificacionParameter = justificacion != null ?
                new ObjectParameter("Justificacion", justificacion) :
                new ObjectParameter("Justificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_RubroPresupuesto_Insertar_Result>("Pr_RubroPresupuesto_Insertar", nombreParameter, anoParameter, montoParameter, codigoProyectoParameter, justificacionParameter);
        }
    
        public virtual ObjectResult<Pr_RubroPresupuesto_SeleccionarXProyecto_Result> Pr_RubroPresupuesto_SeleccionarXProyecto(string codigoProyecto)
        {
            var codigoProyectoParameter = codigoProyecto != null ?
                new ObjectParameter("CodigoProyecto", codigoProyecto) :
                new ObjectParameter("CodigoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_RubroPresupuesto_SeleccionarXProyecto_Result>("Pr_RubroPresupuesto_SeleccionarXProyecto", codigoProyectoParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
